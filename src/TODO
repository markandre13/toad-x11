o trouble with finishing apps with more than one window? (tpaint)
o X11 wants something like fr_CA.ISO_8859-1 or fr_CA.iso88591 in LANG
  instead of fr_CA.ISO-8859-1

TRadioButtonBase: remove sigDeactivate and use the signals from
                  TButtonBase: sigArm / sigDisarm

[    1] TTextField doesn't use the X11 clipboard
[    2] TTextField doesn't unmarks the selection when losing focus
[    3] can't resize windows in TMDIWindow
[    4] no way to modify menubar at run-time
[    6] TTextField paint() is sloopy
[    8] DnD doesn't perform byte switching for little- and big-endian
[   10] Sometimes I get confused which headers to include
[   12] TComboBox doesn't handle the no selection status very well
[   13] TComboBox should pre-select the first item!
[   14] derive TListBox from TScrolledArea
[   15] derive TMDIWindow from TScrolledArea
[   20] Background is cleared to many times under certain conditions
[   22] Should remove TImageViewer::ClipPen(TPen&)
[   23] Can't close application when a static TBitmap has been used
[   25] mouseLDown events are propageted to the parent window
[   27] Floyd-Steinberg dithering should use the real allocated color values
[   28] Layout manager and/or FocusManager should be ancestors of TWindow
        and not a special add-on (like in JAVA), e.g.:
        - add a pointer for the LayoutManager (enlarges TWindow by 4 bytes)
        - add a pointer for the current focus window (another 4 bytes)
[   32] TTitleBar::paint in mdishell.cc shouldn't need to call TPen.ClrClipBox
        because of modifying the background color
[   34] Drop doesn't recognize the window order when windows do overlap
[   36] input checks in TTextField:
        - char check during input
        - whole input check during apply()
[   38] smart gadgets: TOAD decides which TWindow objects are to treat as
        widgets and gadgets
[   39] deactivate menu entry when all it children are deactived [MM]
[   40] stuff more into the configure script
[   41] examples/placement has trouble with icewm
[   42] ...

- children shouldn't get their parents cursor
- call the signals in TRadioButtonBase & remove the value
  stuff?
- SIGIO is ignored between last _messages check an `select' (was?)
- make a editable combobox!!!
  (a) move the edit stuff outside TTextField
  (b) TComboBox doesn't need to add a new entry to the list,
      just set a flag that the selected entry isn't part of
      the list
- GetShape must take care for windows with window manager
  decorations
- add increment and decrement methods to TPointer or
  TSmartReference and delete a terminated thread from the
  smartpointer
- make DrawBezier a const method
- patterns in TPen
- horizontal scrollbars in listbox
- fix `toad/utility.hh'
- TComboBox should close when loosing the keyboard focus
- TScrolledArea
- add TCursor parameter to grab!!! [MM]
- keep 3D look in disabled TCheckBox
- TFileDialog uses the ID* values from TMessageBox :(
- format strings in TTextField like the one in dBASE IV
- the wildcard trick in TFileDialog doesn't work

- dialog editor
  - set window size via textfield
  - grab mouse
  - sometimes after object creation TGadgetEditor thinks it has to move
    a handle
- dialog
  - redraws when mouse pointer enters or leaves, why?
- integrate more PNG alike changes into TBitmapFilter
- flush the paint queue after 1/12s

- TTextArea
  - "\tX": schreiben am Textanfang => Tab verschwindet in der
    Darstellung
  - Cursor hoch & runter springt nicht zum Cursor, wenn dieser vorher
    ausserhalb des Bildschirms ist
- TFileDialog:
    nicht die Extension aendern, wenn Datei ein Verzeichnis ist; im Moment
    wird nur auf `.' im Namen geachtet und das ist falsch
- TGadgetEditor:
  - "uups, no gadget in gadgeteditor.cc at line 520", diese Meldung taucht
    irgendwann auf und verschwindet erst wieder, wenn man kurz zu einem
    anderen Tool wechselt.
- TListBox:
    Es waere gut, wenn man nicht immer ueber die Abbildung ueber `int'
    gehen muesste, sondern wenn man einen Zeiger auf die durch den
    Adapter dargestellten Typen direkt benutzen koennte. Dies heisst aber
    auch, dass die gesamte Zugriff auf die Listbox ueber den Adapter
    erfolgen muss. Das entspricht aber konsequenterweise auch dem
    derzeitigen Vorgehen durch DataManipulator.
- Wenn der DialogEditor beendet wird gibt's 'nen Coredump
- DialogEditor: Auch den ToolTipText editieren lassen
- TRadioButton: mehrzeilig wie TCheckButton
- TSimpleTimer haelt an, wenn man Jump'n Run ueber eine lahme Netzverbindung
  laufen laesst, d.h. das Foerderband bleibt stehen und das Gold hoert auf
  zu blinken wenn man laeuft
- TListBox: TStringManipulator isn't a public superclass
- Sollte die DataManipulators nicht von grundauf im Direktmodus arbeiten?
- Statt `TDataManipulator::Assimilate' koennte ich auch sowas wie
  `TInt v(&value)' benutzen.
- Bei komplexen Dialogen koennen Signal schon waerend der Konstruktions des
  Dialogs ausgeloest werden, wobei die ausgeloesten Methoden aber evtl.
  einen vollstaendigen Abschluss des Konstruktors erwarten. Hier waere es
  vielleicht hilfreich, das Ausloesen der Signal zu verzoegern.
  Also, waere es evtl. sinnvoll alle Trigger zu DelayedTrigger zu machen?
- TTreeView, TMenuBar und TPopup koennen auf die selbe Baumstruktur zurueck-
  greifen
- Die C++ Bibliothek ist nicht besonders konsistent
- C++ Exceptions fuehren zu recht unsauberen Aufraeumaktionen
  Zwei Loesungswege:
  - Aufraeumdeklarationen wie in Java (wie schreibt man die am besten in
    C++?)
  - Smartpointer fuer absolut alles
- TSignal sollte auch mit anderen Signalen verbunden werden koennen
- Die Observer sammeln alle moeglichen Ereignisse?
- Wie modellieren wir sauber die Verbindungen von zwei Objekten, die sich
  gegenseitig beeinflussen ohne in eine Endlosschleife zu geraten?

OLD STUFF:
----------

WAS LIEGT AN ?

Primär:
- MessageBox vor dem Aufruf von TOADBase.Run() funktioniert noch nicht
- Ausgabe von nicht initialsierter TBitmap führt zum Absturz
- Ausgabe von TBitmap im Editmode führt bei Positionen ungleich 0,0 zum
	Absturz
- TBitmap muß noch die MIT X Shared Memory Extension benutzen
- TMDIShell und TMDIWindow aufräumen und dieses häßliche SuppressMessages
  wieder entfernen.
- 'dlopen' zum Laden der Grafikfilter nehmen anstatt sie fest in TOAD
  zu linken
- Bitmap Ausgabe nicht nur horizontal sondern auch vertikal, jeweils die
  längste Achse als Image darstellen.
- In "TFileDialog" ist inzwischen klar geworden, daß ich ein Doc/View Konzept
	benötige. Oder etwas ähnliches. Im Prinzip geht es darum, wie das Zusammen-
	spiel der verschiedenen Teile von TListBox, TDialog, etc. aussehen soll.
- Modale Dialoge ausführen, ohne die Application mit 'Run' gestartet zu
	haben, d.h. Server Connect/Disconnect in main() erledigen
- Beim Dithering werden noch direkt in der Farbpalette vorkommende Farben
	wie (192,192,192) gemischt.
- TMenuBar: Tastatur, deselektierte Einträge, Radio- und Checkboxeinträge.
- TScrollBar: "drag mode on/off" muß einstellbar sein
- TForm: berücksichtigt noch nicht zu kleine Fenster. Vermutlich durch Beachtung
	der Vorzeichen behebbar. (Hoffentlich !!!)
- TFilterBMP kennt keine komprimierten BMP Dateien

Sekundär:
- In TListBox über folgendes Problem gestolpert:
	TListBox erzeugt dynamisch eine Scrollbar und merkt sich diese in einem
	Zeiger. Wird für die ListBox 'Destroy()' aufgerufen, so wird die Scrollbar
	zerstört und man muß darauf achten, daß man den Zeiger auf die Scrollbar
	während 'destroy()' auf NULL setzt, sonst ruft man das Objekt im Nirvana
	auf und endet mit einem SegFault.
	- SmartPointer könnten dieses Problem umgehen!
  	Pointer werden zudem automatisch auf NULL gesetzt, was gelegentlich eine
		weitere Fehlerquelle ist.
		TOSBase in TOADBase umbenennen und dort evtl. einen Teil des Pointer-
		mechanismus integrieren.
	- Anfordern von Nachrichten, daß bestimmte Fenster zerstört werden.
- Fenster ohne 'paint'-Methode könnten evtl. das Elternfenster nutzen, wodurch
	Schachtlungen vom Prinzip
		TDialog -> TForm
	möglich werden, ohne daß dabei ein unnützes Fenster benötigt wird. Außerdem
	kann ich dadurch 4 Bytes für einen Zeiger auf einen LayoutManager wie in
	JAVA in TWindow sparen.
